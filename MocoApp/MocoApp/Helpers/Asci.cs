using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MocoApp.Helpers
{
    public class Asci
    {
        public static char NULO = (char)0;  //	NULL	(Null character)
        public static char SOH = (char)1;   //	SOH	(Start of Header)
        public static char STX = (char)2;   //	STX	(Start of Text)
        public static char ETX = (char)3;   //	ETX	(End of Text)
        public static char EOT = (char)4;   //	EOT	(End of Transmission)
        public static char ENQ = (char)5;   //	ENQ	(Enquiry)
        public static char ACK = (char)6;   //	ACK	(Acknowledgement)
        public static char BEL = (char)7;   //	BEL	(Bell)
        public static char BS = (char)8;    //	BS	(Backspace)
        public static char HT = (char)9;    //	HT	(Horizontal Tab)
        public static char LF = (char)10;   //	LF	(Line feed)
        public static char VT = (char)11;   //	VT	(Vertical Tab)
        public static char FF = (char)12;   //	FF	(Form feed)
        public static char CR = (char)13;   //	CR	(Carriage return)
        public static char SO = (char)14;   //	SO	(Shift Out)
        public static char SI = (char)15;   //	SI	(Shift In)
        public static char DLE = (char)16;  //	DLE	(Data link escape)
        public static char DC1 = (char)17;  //	DC1	(Device control 1)
        public static char DC2 = (char)18;  //	DC2	(Device control 2)
        public static char DC3 = (char)19;  //	DC3	(Device control 3)
        public static char DC4 = (char)20;  //	DC4	(Device control 4)
        public static char NAK = (char)21;  //	NAK	(Negative acknowledgement)
        public static char SYN = (char)22;  //	SYN	(Synchronous idle)
        public static char ETB = (char)23;  //	ETB	(End of transmission block)
        public static char CAN = (char)24;  //	CAN	(Cancel)
        public static char EM = (char)25;   //	EM	(End of medium)
        public static char SUB = (char)26;  //	SUB	(Substitute)
        public static char ESC = (char)27;  //	ESC	(Escape)
        public static char FS = (char)28;   //	FS	(File separator)
        public static char GS = (char)29;   //	GS	(Group separator)
        public static char RS = (char)30;   //	RS	(Record separator)
        public static char US = (char)31;   //	US	(Unit separator)
        public static char SP = (char)32;   //	 	(Space)
        public static char ESPACO = (char)32;   //	 	(Space)
        public static char EXCLAMACAO = (char)33;   //	!	(Exclamation mark)
        public static char ASPAS_DUPLAS = (char)34; //	"	(Quotation mark ; quotes)
        public static char CERQUILHA = (char)35;    //	#	(Number sign)
        public static char CIFRAO = (char)36;   //	$	(Dollar sign)
        public static char PORCENTAGEM = (char)37;  //	%	(Percent sign)
        public static char ECOMERCIAL = (char)38;   //	&	(Ampersand)
        public static char ASPAS_SIMPLES = (char)39;    //	'	(Apostrophe)
        public static char ABRE_PARENTESES = (char)40;  //	(	(round brackets or parentheses)
        public static char FECHA_PARENTESES = (char)41; //	)	(round brackets or parentheses)
        public static char ASTERISTO = (char)42;    //	*	(Asterisk)
        public static char MAIS = (char)43; //	+	(Plus sign)
        public static char VIRGULA = (char)44;  //	,	(Comma)
        public static char HIFEN = (char)45;    //	-	(Hyphen)
        public static char PONTO = (char)46;    //	.	(Dot , full stop)
        public static char BARRA = (char)47;    //	/	(Slash)
        public static char ZERO = (char)48; //	0	(number zero)
        public static char UM = (char)49;   //	1	(number one)
        public static char DOIS = (char)50; //	2	(number two)
        public static char TRES = (char)51; //	3	(number three)
        public static char QUATRO = (char)52;   //	4	(number four)
        public static char CINCO = (char)53;    //	5	(number five)
        public static char SEIS = (char)54; //	6	(number six)
        public static char SETE = (char)55; //	7	(number seven)
        public static char OITO = (char)56; //	8	(number eight)
        public static char NOVE = (char)57; //	9	(number nine)
        public static char DOIS_PONTOS = (char)58;  //	:	(Colon)
        public static char PONTO_E_VIRGULA = (char)59;  //	;	(Semicolon)
        public static char MENOR_QUE = (char)60;    //	<	(Less-than sign)
        public static char IGUAL = (char)61;    //	=	(Equals sign)
        public static char MAIOR_QUE = (char)62;    //	>	(Greater-than sign ; Inequality)
        public static char INTERROGACAO = (char)63; //	?	(Question mark)
        public static char ARROBA = (char)64;   //	@	(At sign)
        public static char A = (char)65;    //	A	(Capital A)
        public static char B = (char)66;    //	B	(Capital B)
        public static char C = (char)67;    //	C	(Capital C)
        public static char D = (char)68;    //	D	(Capital D)
        public static char E = (char)69;    //	E	(Capital E)
        public static char F = (char)70;    //	F	(Capital F)
        public static char G = (char)71;    //	G	(Capital G)
        public static char H = (char)72;    //	H	(Capital H)
        public static char I = (char)73;    //	I	(Capital I)
        public static char J = (char)74;    //	J	(Capital J)
        public static char K = (char)75;    //	K	(Capital K)
        public static char L = (char)76;    //	L	(Capital L)
        public static char M = (char)77;    //	M	(Capital M)
        public static char N = (char)78;    //	N	(Capital N)
        public static char O = (char)79;    //	O	(Capital O)
        public static char P = (char)80;    //	P	(Capital P)
        public static char Q = (char)81;    //	Q	(Capital Q)
        public static char R = (char)82;    //	R	(Capital R)
        public static char S = (char)83;    //	S	(Capital S)
        public static char T = (char)84;    //	T	(Capital T)
        public static char U = (char)85;    //	U	(Capital U)
        public static char V = (char)86;    //	V	(Capital V)
        public static char W = (char)87;    //	W	(Capital W)
        public static char X = (char)88;    //	X	(Capital X)
        public static char Y = (char)89;    //	Y	(Capital Y)
        public static char Z = (char)90;    //	Z	(Capital Z)
        public static char ABRE_COLCHETES = (char)91;   //	[	(square brackets or box brackets)
        public static char BARRA_INVERTIDA = (char)92;  //	\	(Backslash)
        public static char FECHAR_COLCHETES = (char)93; //	]	(square brackets or box brackets)
        public static char ACENTRO_CICUNFLEXO = (char)94;   //	^	(Caret or circumflex accent)
        public static char UNDERLINE = (char)95;    //	_	(underscore , understrike , underbar or low line)
        public static char ACENTRO_GRAVE = (char)96;    //	`	(Grave accent)
        public static char a = (char)97;    //	a	(Lowercase  a )
        public static char b = (char)98;    //	b	(Lowercase  b )
        public static char c = (char)99;    //	c	(Lowercase  c )
        public static char d = (char)100;   //	d	(Lowercase  d )
        public static char e = (char)101;   //	e	(Lowercase  e )
        public static char f = (char)102;   //	f	(Lowercase  f )
        public static char g = (char)103;   //	g	(Lowercase  g )
        public static char h = (char)104;   //	h	(Lowercase  h )
        public static char i = (char)105;   //	i	(Lowercase  i )
        public static char j = (char)106;   //	j	(Lowercase  j )
        public static char k = (char)107;   //	k	(Lowercase  k )
        public static char l = (char)108;   //	l	(Lowercase  l )
        public static char m = (char)109;   //	m	(Lowercase  m )
        public static char n = (char)110;   //	n	(Lowercase  n )
        public static char o = (char)111;   //	o	(Lowercase  o )
        public static char p = (char)112;   //	p	(Lowercase  p )
        public static char q = (char)113;   //	q	(Lowercase  q )
        public static char r = (char)114;   //	r	(Lowercase  r )
        public static char s = (char)115;   //	s	(Lowercase  s )
        public static char t = (char)116;   //	t	(Lowercase  t )
        public static char u = (char)117;   //	u	(Lowercase  u )
        public static char v = (char)118;   //	v	(Lowercase  v )
        public static char w = (char)119;   //	w	(Lowercase  w )
        public static char x = (char)120;   //	x	(Lowercase  x )
        public static char y = (char)121;   //	y	(Lowercase  y )
        public static char z = (char)122;   //	z	(Lowercase  z )
        public static char ABRE_CHAVES = (char)123; //	{	(curly brackets or braces)
        public static char PIPE = (char)124;    //	|	(vertical-bar, vbar, vertical line or vertical slash)
        public static char FECHA_CHAVES = (char)125;    //	}	(curly brackets or braces)
        public static char ACENTO_TIO = (char)126;  //	~	(Tilde ; swung dash)
        public static char DEL = (char)127; //	DEL	(Delete)
        public static char Ç = (char)128;   //	Ç	(Majuscule C-cedilla)
        public static char ü = (char)129;   //	ü	(letter "u" with umlaut or diaeresis ; "u-umlaut")
        public static char é = (char)130;   //	é	(letter "e" with acute accent or "e-acute")
        public static char â = (char)131;   //	â	(letter "a" with circumflex accent or "a-circumflex")
        public static char ä = (char)132;   //	ä	(letter "a" with umlaut or diaeresis ; "a-umlaut")
        public static char à = (char)133;   //	à	(letter "a" with grave accent)
        public static char å = (char)134;   //	å	(letter "a"  with a ring)
        public static char ç = (char)135;   //	ç	(Minuscule c-cedilla)
        public static char ê = (char)136;   //	ê	(letter "e" with circumflex accent or "e-circumflex")
        public static char ë = (char)137;   //	ë	(letter "e" with umlaut or diaeresis ; "e-umlaut")
        public static char è = (char)138;   //	è	(letter "e" with grave accent)
        public static char ï = (char)139;   //	ï	(letter "i" with umlaut or diaeresis ; "i-umlaut")
        public static char î = (char)140;   //	î	(letter "i" with circumflex accent or "i-circumflex")
        public static char ì = (char)141;   //	ì	(letter "i" with grave accent)
        public static char Ä = (char)142;   //	Ä	(letter "A" with umlaut or diaeresis ; "A-umlaut")
        public static char Å = (char)143;   //	Å	(Capital letter "A"  with a ring)
        public static char É = (char)144;   //	É	(Capital letter "E" with acute accent or "E-acute")
        public static char æ = (char)145;   //	æ	(Latin diphthong "ae" in lowercase)
        public static char Æ = (char)146;   //	Æ	(Latin diphthong "AE" in uppercase)
        public static char ô = (char)147;   //	ô	(letter "o" with circumflex accent or "o-circumflex")
        public static char ö = (char)148;   //	ö	(letter "o" with umlaut or diaeresis ; "o-umlaut")
        public static char ò = (char)149;   //	ò	(letter "o" with grave accent)
        public static char û = (char)150;   //	û	(letter "u" with circumflex accent or "u-circumflex")
        public static char ù = (char)151;   //	ù	(letter "u" with grave accent)
        public static char ÿ = (char)152;   //	ÿ	(Lowercase letter "y" with diaeresis)
        public static char Ö = (char)153;   //	Ö	(letter "O" with umlaut or diaeresis ; "O-umlaut")
        public static char Ü = (char)154;   //	Ü	(letter "U" with umlaut or diaeresis ; "U-umlaut")
        public static char ø = (char)155;   //	ø	(slashed zero or empty set)

        //public static char £				 			 = (char)156;	//	£	(Pound sign ; symbol for the pound sterling)
        public static char Ø = (char)157;   //	Ø	(slashed zero or empty set)

        //public static char ×				 			 = (char)158;	//	×	(multiplication sign)
        public static char ƒ = (char)159;   //	ƒ	(function sign ; f with hook sign ; florin sign )

        public static char á = (char)160;   //	á	(letter "a" with acute accent or "a-acute")
        public static char í = (char)161;   //	í	(letter "i" with acute accent or "i-acute")
        public static char ó = (char)162;   //	ó	(letter "o" with acute accent or "o-acute")
        public static char ú = (char)163;   //	ú	(letter "u" with acute accent or "u-acute")
        public static char ñ = (char)164;   //	ñ	(letter "n" with tilde ; enye)
        public static char Ñ = (char)165;   //	Ñ	(letter "N" with tilde ; enye)
        public static char ª = (char)166;   //	ª	(feminine ordinal indicator)
        public static char º = (char)167;   //	º	(masculine ordinal indicator)

        //public static char ¿				 			 = (char)168;	//	¿	(Inverted question marks)
        //public static char ®				 			 = (char)169;	//	®	(Registered trademark symbol)
        //public static char ¬				 			 = (char)170;	//	¬	(Logical negation symbol)
        //public static char ½				 			 = (char)171;	//	½	(One half)
        //public static char ¼				 			 = (char)172;	//	¼	(Quarter or  one fourth)
        //public static char ¡				 			 = (char)173;	//	¡	(Inverted exclamation marks)
        //public static char «				 			 = (char)174;	//	«	(Angle quotes or guillemets)
        //public static char »				 			 = (char)175;	//	»	(Guillemets or  angle quotes)
        //public static char ¦				 			 = (char)176;	//	¦
        //public static char ¦				 			 = (char)177;	//	¦
        //public static char ¦				 			 = (char)178;	//	¦
        //public static char ¦				 			 = (char)179;	//	¦	(Box drawing character)
        //public static char ¦				 			 = (char)180;	//	¦	(Box drawing character)
        public static char Á = (char)181;   //	Á	(Capital letter "A" with acute accent or "A-acute")

        public static char Â = (char)182;   //	Â	(letter "A" with circumflex accent or "A-circumflex")
        public static char À = (char)183;   //	À	(letter "A" with grave accent)

        //public static char ©				 			 = (char)184;	//	©	(Copyright symbol)
        //public static char ¦				 			 = (char)185;	//	¦	(Box drawing character)
        //public static char ¦				 			 = (char)186;	//	¦	(Box drawing character)
        //public static char +				 			 = (char)187;	//	+	(Box drawing character)
        //public static char +				 			 = (char)188;	//	+	(Box drawing character)
        //public static char ¢				 			 = (char)189;	//	¢	(Cent symbol)
        //public static char ¥				 			 = (char)190;	//	¥	(YEN and YUAN sign)
        //public static char +				 			 = (char)191;	//	+	(Box drawing character)
        //public static char +				 			 = (char)192;	//	+	(Box drawing character)
        //public static char -				 			 = (char)193;	//	-	(Box drawing character)
        //public static char -				 			 = (char)194;	//	-	(Box drawing character)
        //public static char +				 			 = (char)195;	//	+	(Box drawing character)
        public static char HIFEN2 = (char)196;      //	-	(Box drawing character)
                                                    //public static char +				 			 = (char)197;	//	+	(Box drawing character)
                                                    //public static char ã				 			 = (char)198;	//	ã	(Lowercase letter "a" with tilde or "a-tilde")
                                                    //public static char Ã				 			 = (char)199;	//	Ã	(Capital letter "A" with tilde or "A-tilde")
                                                    //public static char +				 			 = (char)200;	//	+	(Box drawing character)
                                                    //public static char +				 			 = (char)201;	//	+	(Box drawing character)
                                                    //public static char -				 			 = (char)202;	//	-	(Box drawing character)
                                                    //public static char -				 			 = (char)203;	//	-	(Box drawing character)
                                                    //public static char ¦				 			 = (char)204;	//	¦	(Box drawing character)
                                                    //public static char -				 			 = (char)205;	//	-	(Box drawing character)
                                                    //public static char +				 			 = (char)206;	//	+	(Box drawing character)
                                                    //public static char ¤				 			 = (char)207;	//	¤	(generic currency sign)
                                                    //public static char ð				 			 = (char)208;	//	ð	(Lowercase letter "eth")
                                                    //public static char Ð				 			 = (char)209;	//	Ð	(Capital letter "Eth")
        public static char Ê = (char)210;   //	Ê	(letter "E" with circumflex accent or "E-circumflex")

        public static char Ë = (char)211;   //	Ë	(letter "E" with umlaut or diaeresis ; "E-umlaut")
        public static char È = (char)212;   //	È	(letter "E" with grave accent)

        //public static char i				 			 = (char)213;	//	i	(lowercase dot less i)
        public static char Í = (char)214;   //	Í	(Capital letter "I" with acute accent or "I-acute")

        public static char Î = (char)215;   //	Î	(letter "I" with circumflex accent or "I-circumflex")
        public static char Ï = (char)216;   //	Ï	(letter "I" with umlaut or diaeresis ; "I-umlaut")

        //public static char +				 			 = (char)217;	//	+	(Box drawing character)
        //public static char +				 			 = (char)218;	//	+	(Box drawing character)
        //public static char ¦				 			 = (char)219;	//	¦	(Block)
        //public static char _				 			 = (char)220;	//	_	(Bottom half block)
        //public static char ¦				 			 = (char)221;	//	¦	(vertical broken bar)
        //public static char Ì				 			 = (char)222;	//	Ì	(letter "I" with grave accent)
        public static char UNDERLINE_TOP = (char)223;   //	¯	(Top half block)
        public static char Ó = (char)224;   //	Ó	(Capital letter "O" with acute accent or "O-acute")

        public static char ß = (char)225;   //	ß	(letter "Eszett" ; "scharfes S" or "sharp S")
        public static char Ô = (char)226;   //	Ô	(letter "O" with circumflex accent or "O-circumflex")
        public static char Ò = (char)227;   //	Ò	(letter "O" with grave accent)
        public static char õ = (char)228;   //	õ	(letter "o" with tilde or "o-tilde")
        public static char Õ = (char)229;   //	Õ	(letter "O" with tilde or "O-tilde")
        public static char µ = (char)230;   //	µ	(Lowercase letter "Mu" ; micro sign or micron)
        public static char þ = (char)231;   //	þ	(Lowercase letter "Thorn")
        public static char Þ = (char)232;   //	Þ	(Capital letter "thorn")
        public static char Ú = (char)233;   //	Ú	(Capital letter "U" with acute accent or "U-acute")
        public static char Û = (char)234;   //	Û	(letter "U" with circumflex accent or "U-circumflex")
        public static char Ù = (char)235;   //	Ù	(letter "U" with grave accent)
        public static char ý = (char)236;   //	ý	(Lowercase letter "y" with acute accent)
        public static char Ý = (char)237;   //	Ý	(Capital letter "Y" with acute accent)

        //public static char ¯				 			 = (char)238;	//	¯	(macron symbol)
        public static char ACENTO_AGUDO = (char)239;    //	´	(Acute accent)

        //public static char IGUAL						 = (char)40;	//	­	(Hyphen)
        //public static char ±				 			 = (char)241;	//	±	(Plus-minus sign)
        public static char UNDERLINE_DUPLO = (char)242; //	=	(underline or underscore)

        //public static char ¾				 			 = (char)243;	//	¾	(three quarters)
        //public static char ¶				 			 = (char)244;	//	¶	(paragraph sign or pilcrow)
        //public static char §				 			 = (char)245;	//	§	(Section sign)
        public static char DIVIDIR = (char)246; //	÷	(The division sign ; Obelus)

        //public static char ¸				 			 = (char)247;	//	¸	(cedilla)
        //public static char °				 			 = (char)248;	//	°	(degree symbol )
        //public static char ¨				 			 = (char)249;	//	¨	(Diaeresis)
        //public static char ·				 			 = (char)250;	//	·	(Interpunct or space dot)
        //public static char ¹				 			 = (char)251;	//	¹	(superscript one)
        //public static char ³				 			 = (char)252;	//	³	(cube or superscript three)
        //public static char ²				 			 = (char)253;	//	²	(Square or superscript two)
        //public static char ¦				 			 = (char)254;	//	¦	(black square)
        public static char NOBREAK_SPACE = (char)255;   //	nbsp	(non-breaking space or no-break space)
    }
}
